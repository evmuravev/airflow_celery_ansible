- set_fact:
    etc_hosts: >-
      {%- set result = {} -%}
      {%- for key, value in hostvars.items() if key.startswith('worker') -%}
            {%- set _ = result.update({key: value['ansible_host']}) -%}
      {%- endfor -%}
      {{ result | to_json | from_json }}

- include_tasks: "../roles/common/tasks/run_airflow_container.yml"
  vars:
      command: db upgrade
  ignore_errors: True

- name: waiting for db upgrade to complete
  command: "docker wait airflow_db_upgrade"

- include_tasks: "../roles/common/tasks/run_airflow_container.yml"
  vars:
    container_name: create_user
    command: users create --username {{ airflow.username }} --role Admin --email {{ airflow.email }} --password {{ airflow.password }} -f admin -l admin

- include_tasks: "../roles/common/tasks/run_airflow_container.yml"
  vars:
    command: webserver
    restart_policy: always
    ports:
      - "{{ airflow.port }}:{{ airflow.port }}"
    extra_hosts: "{{ etc_hosts }}"

- include_tasks: "../roles/common/tasks/run_airflow_container.yml"
  vars:
    container_name: scheduler_{{ counter }}
    command: scheduler
    restart_policy: always
    extra_hosts: "{{ etc_hosts }}"
  with_sequence: "count=1"
  loop_control:
    loop_var: counter

- include_tasks: "../roles/common/tasks/run_airflow_container.yml"
  vars:
    container_name: celery_flower
    command: celery flower
    restart_policy: always
    extra_hosts: "{{ etc_hosts }}"
    ports:
      - "{{ airflow.flower.port }}:{{ airflow.flower.port }}"
    var_exposed_ports:
      - "{{ airflow.flower.port }}"